generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("LOCAL_DB_URI")
}
model Employee {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique(map: "email") @db.VarChar(255)
  firstName   String   @db.VarChar(255)
  lastName   String    @db.VarChar(255)
  password   String    @db.VarChar(255)
  Employee_role_details  Employee_Role_Master ?
}
model Role {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  Employee_role_master  Employee_Role_Master ?
}
model Employee_Role_Master {
  id       Int  @id @default(autoincrement())
  Employee  Employee  ? @relation(fields: [EmployeeId], references: [id]) //
  role  Role  ? @relation(fields: [roleId], references: [id]) //
  EmployeeId Int  @unique
  roleId Int  @unique
}

model KeyStore {
  id           Int      @id @default(autoincrement())
  client          Int      @default(0) // Provide a default value
  primaryKey   String   @db.VarChar(255)
  secondaryKey String   @db.VarChar(255)
}


model Key {
  id      Int      @id @default(autoincrement())
  keys   String  @db.VarChar(255)
  version    String  @db.VarChar(255)
  status    Boolean 
  permissions    String   @db.VarChar(255) @default("")
}

// schema.prisma

model EmployeeFamilyDetails {
  empFamilyDetailsId  Int       @id @default(autoincrement())
  EmployeeId               Int
  name                String
  dob                 String    // Assuming date of birth is stored as a string
  gender              String
  emergencyContactPerson Boolean
  mobileNo            String
  relationWithEmp     String
  createdBy           Int
  createdAt           DateTime @default(now())
  updatedBy           Int
  updatedAt           DateTime @default(now()) @updatedAt
}
